name: CI

# Déclencheurs du workflow : détermine quand le workflow doit s'exécuter.
on:
  push:  # Déclenché par un push de code.
    branches:
      - main  # Sur la branche principale "main".
  pull_request:  # Déclenché par une pull request.
    branches:
      - main  # Sur la branche principale "main".

# Jobs ou tâches du workflow.
jobs:
  build:
    runs-on: ubuntu-latest  # Exécute le job sur la dernière version d'Ubuntu.

    # Définition d'un service MySQL nécessaire pour le job.
    services:
      mysql:
        image: mysql:5.7  # Utilise l'image MySQL version 5.7.
        env:  # Variables d'environnement pour MySQL.
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: symfony_test
        ports:
          - 3306:3306  # Expose le port 3306.
        options: >-
          --health-cmd="mysqladmin ping --silent" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3

    env:
      DATABASE_URL: mysql://root:root@127.0.0.1:3306/symfony_test

    steps:
    - name: Checkout code  # Checkout du code source.
      uses: actions/checkout@v2

    - name: Set up PHP 8.2  # Installation de PHP 8.2.
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, intl, pdo_mysql
        tools: composer

    - name: Install Composer dependencies  # Installation des dépendances via Composer.
      run: rm composer.lock && composer install --prefer-dist --no-progress --no-suggest --no-interaction

    - name: Create .env.test.local  # Création d'un fichier d'environnement pour les tests.
      run: |
        echo 'DATABASE_URL="mysql://root:root@127.0.0.1:3306/symfony_test"' > .env.test.local

    - name: Run database migrations  # Exécution des migrations de base de données.
      run: php bin/console

  analyze-static-code:  # Job pour l'analyse statique du code.
    runs-on: ubuntu-latest
    needs: build  # Ce job nécessite que le job `build` soit complété.

    steps:
    - name: Checkout code  # Checkout du code source.
      uses: actions/checkout@v2

    - name: Set up PHP 8.2 and tools for static analysis  # Installation de PHP et outils pour l'analyse statique.
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, intl, pdo_mysql
        tools: phpstan

    - name: Install dependencies  # Installation des dépendances.
      run: rm composer.lock && composer install --prefer-dist --no-progress --no-suggest --no-interaction

    - name: Run static analysis  # Exécution de l'analyse statique.
      run: vendor/bin/phpstan analyse ./public/index.php

  run-unit-tests:  # Job pour l'exécution des tests unitaires.
    runs-on: ubuntu-latest
    needs: build  # Dépend du job `build`.

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up PHP 8.2 and PHPUnit  # Installation de PHP et PHPUnit.
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, intl, pdo_mysql
        tools: phpunit

    - name: Install dependencies
      run: rm composer.lock && composer install --prefer-dist --no-progress --no-suggest --no-interaction

    - name: Run unit tests  # Exécution des tests unitaires.
      run: vendor/bin/phpunit

  security-scan:  # Job pour l'analyse de sécurité.
    runs-on: ubuntu-latest
    needs: build  # Dépend du job `build`.

    steps:
    - name: Checkout code  # Checkout du code source.
      uses: actions/checkout@v2

    - name: Install Symfony CLI  # Installation du CLI Symfony.
      run: |
        curl -sS https://get.symfony.com/cli/installer | bash
        sudo mv /home/runner/.symfony5/bin/symfony /usr/local/bin/symfony

    - name: Run security analysis  # Exécution de l'analyse de sécurité.
      run: symfony check:security
